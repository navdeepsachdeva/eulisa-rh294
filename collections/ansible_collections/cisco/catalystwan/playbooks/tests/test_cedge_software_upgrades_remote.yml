# Copyright 2024 Cisco Systems, Inc. and its affiliates
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

---

# Helper playbooks to test modules and flows while developing them
# It assumes that controllers are <20.13 version and Edge are <17.13 version
# This playbook should be reused for CI/CD integration. For this, only vars should be adjusted.


# Tested operations:

# --- Remote image upload --- #
# Upload c8000v-universalk9.17.13.01a.SPA.bin

# --- cEdge upgrade operations --- #
# 1. Install c8000v-universalk9.17.13.01a.SPA.bin - with reboot
# 2. Verify that activated version appears as current version and old version in available files
# 3. Set default software operation
# 4. Verify that default version set correctly
# 5. Try to downgrade by activating lower version
# 6. Verify that installed version appears as current version


# --- Post test operations - cEdge upgrade to higher version --- #
# Activate software 17.13.01 on all cEdge devices


- name: Testing playbook to verify cisco.catalystwan.software_repository module operations
  hosts: localhost
  gather_facts: false
  vars_files:
    - configuration_file_dev_vars.yml
  vars:
    remote_software_filename: "c8000v-universalk9.17.13.01a.SPA.bin"
    higher_software_version: "17.13.01a.0.1297"
    lower_software_version: "17.12.01a.0.118"
  tasks:
    - name: "Provide software images for testing - remote"
      block:
        - name: "Configure aws-software-repo Remote Server"
          cisco.catalystwan.software_repository:
            remote_server:
              state: present
              name: "{{ remote_server_name }}"
              url: "{{ remote_server_url }}"
              protocol: SCP
              port: 22
              vpn: 512
              user: "{{ remote_server_user }}"
              password: "{{ remote_server_password }}"
              image_location_prefix: "{{ remote_server_image_location_prefix }}"
            manager_authentication:
              url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
              username: "{{ (vmanage_instances | first).admin_username }}"
              password: "{{ (vmanage_instances | first).admin_password }}"
          failed_when: false
          changed_when: false

        - name: "Get list of all Remote Server repositories on Manager"
          cisco.catalystwan.software_repository_info:
            category: "remote_servers"
            manager_authentication:
              url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
              username: "{{ (vmanage_instances | first).admin_username }}"
              password: "{{ (vmanage_instances | first).admin_password }}"
          register: all_remote_servers

        - name: "Debug all_remote_servers - expect one, and verify port is == 22"
          ansible.builtin.assert:
            that:
              - all_remote_servers.remote_servers | length == 1
              - ( all_remote_servers.remote_servers | first ).remote_server_name == remote_server_name
              - ( all_remote_servers.remote_servers | first ).remote_server_port == 22

        - name: "Upload image to Manager from Remote Server, image: {{ remote_software_filename }}"
          cisco.catalystwan.software_repository:
            software:
              filename: "{{ remote_software_filename }}"
              remote_server_name: "{{ remote_server_name }}"
            manager_authentication:
              url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
              username: "{{ (vmanage_instances | first).admin_username }}"
              password: "{{ (vmanage_instances | first).admin_password }}"


    # --- cEdge upgrade operations --- #


    - name: "[TEST] 1. Install software operation on cEdges"
      cisco.catalystwan.software_upgrade:
        state: "present"  # present with reboot: true -> ACTIVATE in vManage
        reboot: true
        remote_server_name: "{{ remote_server_name }}"
        remote_image_filename: "{{ remote_server_image_location_prefix }}{{ remote_software_filename }}"
        wait_for_completed: true
        downgrade_check: false
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"

    - name: "Get details of software installed on edge components - filter cEdges"
      cisco.catalystwan.software_upgrade_info:
        device_type: "vedge"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"
      register: software_info

    - name: "[TEST] 2. Verify that activated version appears as current version and old version in available files"
      ansible.builtin.assert:
        that:
          - "'{{ higher_software_version }}' in {{ item }}.current_partition"
          - "not '{{ higher_software_version }}' in {{ item }}.available_versions"
          - "not '{{ higher_software_version }}' in {{ item }}.default_version"
          - "'{{ lower_software_version }}' in {{ item }}.available_versions"
        fail_msg: "{{ item | to_nice_yaml }}"
        success_msg: "{{ item | to_nice_yaml }}"
      loop: "{{ software_info.installed_devices }}"


    - name: "[TEST] 3. Set default software operation on cEdges, version: {{ higher_software_version }}"
      cisco.catalystwan.software_upgrade:
        state: "default"
        image_version: "current"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"

    - name: "Get details of software installed on edge components - filter cEdges"
      cisco.catalystwan.software_upgrade_info:
        device_type: "vedge"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"
      register: software_info

    - name: "[TEST] 4. Verify that default version set correctly as version: {{ higher_software_version }}"
      ansible.builtin.assert:
        that:
          - "'{{ higher_software_version }}' in {{ item }}.default_version"
        fail_msg: "{{ item | to_nice_yaml }}"
        success_msg: "{{ item | to_nice_yaml }}"
      loop: "{{ software_info.installed_devices }}"


    - name: "[TEST] 5. Try to downgrade by activating lower version"
      cisco.catalystwan.software_upgrade:
        state: "active"
        image_version: "{{ lower_software_version }}"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"

    - name: "Get details of software installed on edge components - filter cEdges"
      cisco.catalystwan.software_upgrade_info:
        device_type: "vedge"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"
      register: software_info

    - name: "[TEST] 6. Verify that installed version appears as current version: {{ lower_software_version }}"
      ansible.builtin.assert:
        that:
          - "'{{ lower_software_version }}' in {{ item }}.current_partition"
        fail_msg: "software_info: {{ software_info }}"
        success_msg: "software_info: {{ software_info }}"
      loop: "{{ software_info.installed_devices }}"


    # --- Post test operations - cEdge upgrade to higher version --- #


    - name: "Activate software operation on cEdge: {{ higher_software_version }}"
      cisco.catalystwan.software_upgrade:
        state: "active"
        image_version: "{{ higher_software_version }}"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"

    - name: "Get details of software installed on edge components - filter cEdges"
      cisco.catalystwan.software_upgrade_info:
        device_type: "vedge"
        filters:
          personality: "vedge"
        manager_authentication:
          url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
          username: "{{ (vmanage_instances | first).admin_username }}"
          password: "{{ (vmanage_instances | first).admin_password }}"
      register: software_info

    - name: "Verify that activated version appears as current version and old version in available files"
      ansible.builtin.assert:
        that:
          - "'{{ higher_software_version }}' in {{ item }}.current_partition"
          - "not '{{ higher_software_version }}' in {{ item }}.available_versions"
          - "not '{{ higher_software_version }}' in {{ item }}.default_version"
          - "'{{ lower_software_version }}' in {{ item }}.available_versions"
        fail_msg: "{{ item | to_nice_yaml }}"
        success_msg: "{{ item | to_nice_yaml }}"
      loop: "{{ software_info.installed_devices }}"
